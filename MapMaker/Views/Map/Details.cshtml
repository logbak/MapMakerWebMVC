@model MapMaker.Models.MapBlockViewModel

@{
    ViewBag.Title = "Details";
}

<br />
<hr />
<div class="row">
    <div class="col-md-6">
        <h2>Map Details</h2>
        <hr />
        <br />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.MapDetail.MapID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MapDetail.MapID)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MapDetail.OwnerName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MapDetail.OwnerName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MapDetail.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MapDetail.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MapDetail.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MapDetail.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MapDetail.SizeX)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MapDetail.SizeX)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MapDetail.SizeY)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MapDetail.SizeY)
            </dd>

        </dl>

        <br />
        <br />
        <p>
            @if (User.Identity.Name == Model.MapDetail.OwnerName)
            {
                @Html.ActionLink("Edit", "Edit", new { id = Model.MapDetail.MapID }) @:|
            }
            @Html.ActionLink("Back to Archive", "Index") | @Html.ActionLink("Back to My Maps", "MyMaps")
        </p>
    </div>



    <div class="col-md-6">
        <h3 style="text-align:center;">Preview</h3>
        <hr />
        <div id="preview">
            <canvas class="mapPreview" id="canvasMap" height="1500" width="1500"></canvas>
        </div>
    </div>
</div>

<hr />
<br />
@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert" style="background-color: #72bb53; border-color: #6aaf4d; color: #305e30; width: 25%;">
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}

@if (User.Identity.Name == Model.MapDetail.OwnerName)
{
    <h3>Blocks <span style="float:right;">@Html.ActionLink("Add Block", "Create", "Block", new { id = Model.MapDetail.MapID }, null)</span></h3>
}
else
{
    <h3>Blocks</h3>
}

@if (Model.BlockLists.Any(b => b.MapID == Model.MapDetail.MapID))
{
    <div class="table-responsive">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().ID)
                </th>

                <th>
                    Type
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().Name)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().Description)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().PosX)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().PosY)
                </th>

                <th>
                    Has Event?
                </th>

                <th></th>
            </tr>
            @foreach (var item in Model.BlockLists)
            {
                if (item.Type == "Exit")
                {
                    continue;
                }
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PosX)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PosY)
                    </td>

                    <td>
                        @(item.HasEvent ? "Yes" : "No")
                    </td>
                    <td>
                        @if (User.Identity.Name == Model.MapDetail.OwnerName)
                        {
                            if (!item.HasEvent && item.Type != "Wall")
                            {
                                @Html.ActionLink("Add Event", "Create", "GameEvent", new { id = item.ID }, null) @:|
                            }
                            @Html.ActionLink("Details", "Details", "Block", new { id = item.ID }, null) @:|
                            @Html.ActionLink("Edit", "Edit", "Block", new { id = item.ID }, null) @:|
                            @Html.ActionLink("Delete", "Delete", "Block", new { id = item.ID }, null)
                        }
                        @if (User.Identity.Name != Model.MapDetail.OwnerName)
                        {
                            @Html.ActionLink("Details", "Details", "Block", new { id = item.ID }, null)
                        }

                    </td>
                </tr>
            }

        </table>
    </div>
}

@if (User.Identity.Name == Model.MapDetail.OwnerName)
{
    <h3>Exits <span style="float:right;">@Html.ActionLink("Add Exit", "CreateExit", "Block", new { id = Model.MapDetail.MapID }, null)</span></h3>
}
else
{
    <h3>Exits</h3>
}

@if (Model.BlockLists.Any(b => b.MapID == Model.MapDetail.MapID))
{
    <div class="table-responsive">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().ID)
                </th>

                <th>
                    Type
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().Name)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().Description)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().PosX)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().PosY)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().ExitDirection)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BlockLists.First().ExitToID)
                </th>

                <th></th>
            </tr>
            @foreach (var item in Model.BlockLists)
            {
                if (item.Type != "Exit")
                {
                    continue;
                }
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PosX)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PosY)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ExitDirection)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ExitToID)
                    </td>

                    <td>
                        @if (User.Identity.Name == Model.MapDetail.OwnerName)
                        {
                            @Html.ActionLink("Details", "Details", "Block", new { id = item.ID }, null) @:|
                            @Html.ActionLink("Edit", "ExitEdit", "Block", new { id = item.ID }, null) @:|
                            @Html.ActionLink("Delete", "Delete", "Block", new { id = item.ID }, null)
                        }
                        @if (User.Identity.Name != Model.MapDetail.OwnerName)
                        {
                            @Html.ActionLink("Details", "Details", "Block", new { id = item.ID }, null)
                        }

                    </td>
                </tr>
            }

        </table>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var model = @Html.Raw(Json.Encode(Model));
            var preview = @Html.Raw(Json.Encode(Model.MapDetail.MapPreview));
            mapPreview(preview);
        });
    </script>
}