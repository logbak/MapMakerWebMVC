@model MapMaker.Models._02_BlockModels.BlockEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BlockEdit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.MapID)
        @Html.HiddenFor(model => model.Creator)

        @Html.LabelFor(model => model.TypeOfBlock, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "Object",
                    Value = "Object",
                    Selected = true
                });
                listItems.Add(new SelectListItem
                {
                    Text = "NPC",
                    Value = "NPC",
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Wall",
                    Value = "Wall"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Exit",
                    Value = "Exit"
                });
            }
            @Html.DropDownListFor(model => model.TypeOfBlock, listItems, "-- Select Status --", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TypeOfBlock, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PosX, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PosX, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PosX, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PosY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PosY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PosY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to Map", "Details", "Map", new { id = Model.MapID }, null) |
        @Html.ActionLink("Back to Block Detail", "Details", new { id = Model.ID })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
